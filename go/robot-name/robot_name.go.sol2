package robotname

import (
	"errors"
	"fmt"
	"math/rand"
	"time"
)

// Robot reprents a robot with its name.
type Robot struct {
	name string
}

// usedName keeps track of which names are in use.
var usedNames = make(map[string]bool)

// Name defines the random unique name of robot.
func (r *Robot) Name() (string, error) {
	if r.name > "" {
		return r.name, nil
	}
	rand.Seed(time.Now().UTC().UnixNano())
	l1 := rand.Intn(26)
	l2 := rand.Intn(26)
	n := rand.Intn(1000)
	first := fmt.Sprintf("%c%c%03d", 'A'+byte(l1), 'A'+byte(l2), n)
	r.name = first
	for usedNames[r.name] {
		if n = (n + 1) % 1000; n == 0 {
			if l2 = (l2 + 1) % 26; l2 > 0 {
				l1 = (l1 + 1) % 26
			}
		}
		r.name = fmt.Sprintf("%c%c%03d", 'A'+byte(l1), 'A'+byte(l2), n)
		if r.name == first {
			return "", errors.New("All valid robot names are used")
		}
	}
	usedNames[r.name] = true
	return r.name, nil
}

// Reset resets a given robot's name.
func (r *Robot) Reset() {
	*r = Robot{}
}
